journal.document.adventurers_guide.title=Application Report
journal.document.adventurers_guide.intro.title=Active Functionalities
journal.document.adventurers_guide.intro.body=SAAAA-LUUU-TATIONS!\n\nYou're reading our incredible final report!(Sorry for the RWBY reference, had to include it) This report has all of the MUST KNOWS of this app! We'll start by listing functionalities explained in video.\nTo begin with, the gameplay shall let the player move, attack, pick up and use objects. All of this done through simple Taps. Also, there's a combat system with equipment, damage and healing calculations, multiple effects and some nasty critters(and NPCs) wanting to kill you (Or help)\nAdditionally, it's important to know that the buttons work to open your inventory, read this report(or compendiums) or investigate/wait to "burn turns" or get some spicy secrets.\nNext page shall talk about configuration functionalities! Onwards to VICTORY!
journal.document.adventurers_guide.identifying.title=Configuration Functionalities
journal.document.adventurers_guide.identifying.body=The functionalities outside of the game are as important as the gameplay!\n\nWe'll start with the base ones, being a roguelike each tun is different and objects, effects and even the color of potions changes thanks to the whims of randomizers.\n\nNow, configurations are VITAL. So, the game has a pause menu including: configurations, main menu option, exit game or return to it.(Or start a new one if you DIE), configuration lets you change how the game looks or enable energy saving mode, likewise, it lets you change the audio or UI. The other features are shown on the main menu.\nOn the main menu, you are able to see your rankings(How far you got on each run), badges(Achievements of a kind), a changelog, an "about", connection with Google Play, an option to change languages and donations.\n\nFinally, the option to enter the Gungeon(Sorry, wrong game) has the option to continue saved runs or start a new one letting the player select a class amongst four. \n\n These are all the functionalities found on this app. We hope you liked this first part of the report.
journal.document.adventurers_guide.examining_and_searching.title=Code 1: Android
journal.document.adventurers_guide.examining_and_searching.body=How this code is organized is really important. Like eating is for puny humans!\n\nInitially, it must be taken into account that this project's codes are divided into two big sites: A folder called "core" that has over 100 classes and the Android folder of the common classes of Android Studio. This entry shall focus on the last folder.\n\nThis folder contains the game, the launcher and the platform support alongside the windows and text input of the game. That means that these classes are what is directly connected to Android and is what lets the game play!\n\nThe most important thing on this folder is that it creates a redrawable canvas on which the actual game works. Additionally, this links to the actual game's classes, observing the changes and modifying the views according to the calculations of the game.
journal.document.adventurers_guide.strength.title=Code 2: Core
journal.document.adventurers_guide.strength.body=The second file contains the code outside of the runnable of Android Studio proper. This folder, which may or may not be a modified version of the Orginal Pixel Dungeon, works as a base library to execute the whole game.\n\nThis folder,Core, is the one that contains everything needed to actually run the game. The Assets, for example, are in this folder. Another good example is the files from which we write this report.\n\nBut the most important thing is the use of code on this folder. The Source defines the code and, to do so, divides it in 15 folders and multiple files outside of them for its execution.\n\nIn general, the external files work to load assets whilst the ones inside folders carry the logic like black men carry coffins while dancing. \n The logic, in general, is based upon decorators like when the hero gets his class and level ups, a mob becomes his specific type, etc. Additionally, the UI is modified here and the levels are created by randomizers who are still more predictable than my ex, being this most of the general code.
journal.document.adventurers_guide.food.title=Code 3: Libraries
journal.document.adventurers_guide.food.body=To begin with, this game requires a library created by the original game's creator(Which has no name), this one helps bind the calculations and basic shows of the game plus helping with compatibility.\n\nThe other libraries are not used on Core but on the Android folder files. Let's read more about them, shall we?\n\nWe may only see three libraries on this game: Nameless, the Core itself and badlogic, this library works to configure the project to run on Android Studio since, originally, it only worked on IntelliJ. \n\nThis pretty much wraps up our code analysis. Together with their Youtube Videos, this should work out to give you a great understanding of the code. See you next time while we will show eventual connectivity and may try to conquer this world with it.
journal.document.adventurers_guide.levelling.title=Eventual Connectivity
journal.document.adventurers_guide.levelling.body=Eventual Connectivity in this game is only seen in two cases(Like my dad):\n\nThe first one is Google Play Services, this has its Eventual Connectivity services that work as a black box. In this game, it works as a deferred save, being useful to play the game on multiple devices. In case of not having connection, waits until it has it and then sends the data to the server.\n\n On the other side, the other thing is when you try to donate to the creators. It has a message that gives basically 0 data saying that you have no connection without giving any reasons.
journal.document.adventurers_guide.surprise_attacks.title=Performance 1: Asus
journal.document.adventurers_guide.surprise_attacks.body=Initially, we'll bring to your attention a device for readers only and then its conclusions: The Asus Zenfone Max Plus.\n\nFirst we'll show you its characteristics: RAM 3 GB, Memory of 32 GB, Android 9\n\nThe data found by the Profiler of Android Studio were, taking into account its regular data: CPU usage around 7%, memory usage 103 MB, network of 3B/s and, finally, energy on a specially low battery usage compared to other games like KoFAS and Yu Gi Oh, Duel Links.\n\nFinally, we want to tell you the extreme use case we've found which is the second boss who teleports around and fills the screen with particles making the CPU reach around 20%
journal.document.adventurers_guide.dieing.title=Performance 2: Conclusions
journal.document.adventurers_guide.dieing.body=After testing the game on five different devices, making it viable to physically find and see the errors and problems, the following were our findings:\n\nLet's start with the CPU: It uses relatively little of it, maintaining under 10% most of the time thanks to the simple calculations it makes. The minimum memory usage on any device was around 40 MB(with small jumps and drops, that's why we say around), and we found that if the android uses JIT it will initially use less than if it uses AoT. Finally, it uses less battery than the other two games that were tested by around 35% and the network usage is so small the graphics on the profiler makes it almost nothing to the eye.\n\nFinally, we must talk about the unnatural things on execution: When many particles are on screen or the game needs to do complex calculations like creating a level, there are spikes on CPU and memory usage. On the more recent versions of Android, it doesn't matter thanks to the AoT approach meaning that they will be stable but on the older versions the usage spikes and stays there meaning that the longer the game goes, the more memory and CPU it will use.
journal.document.adventurers_guide.looting.title=Threads
journal.document.adventurers_guide.looting.body=Let's leave something clear to begin with: This game CAN'T EVEN use Threads.\n\nSo, we shall explain why in a simple way. At a glance, one would guess that the observers need to be synchronized.\n\nThe reality's slightly different(and often disappointing). This is a turn based game, even if it doesn't look like it. Thanks to that, the game needs to be executed IN ORDER.\n\nThis was tested by executing async tasks. Since all tasks need to check for the others to be completed, even a simple move out of turn generates bugs and can damage the game experience.
journal.document.adventurers_guide.magic.title=Our Mods
journal.document.adventurers_guide.magic.body=Magical attacks cut right through armor and are extremely difficult to dodge.\n\nThis means that damage you deal with wands will be very reliable, but also makes magical enemies extremely dangerous.\n\nMagical attacks always have a caveat though. In the case of wands it's their limited charges, wands become almost useless if they aren't given time to recharge. Magic that enemies use will always have some form of weakness as well. \n\nWhen facing enemies that use magic it is extremely important to figure out how to evade their magic, rather than just eating the damage from it.

journal.document.alchemy_guide.title=Alchemy Guide
journal.document.alchemy_guide.potions.title=Creating Potions
journal.document.alchemy_guide.potions.body=Welcome to Practical Applications of Alchemy!\n\nThis book serves as a recipe reference for hobbyist alchemists and adventurers looking to get their hands dirty.\n\nWe will start with the most iconic alchemy recipe: Place any three seeds into an alchemy pot to brew a random potion!\n\nEvery seed has a potion counterpart, and the potion you create may relate to one of the seeds used. Using multiple of the same seed will increase the chance for this to occur.
journal.document.alchemy_guide.stones.title=Creating Runestones
journal.document.alchemy_guide.stones.body=Mixing a scroll into an alchemy pot will imbue its magic into two or three rocks within the pot. This creates runestones!
journal.document.alchemy_guide.energy_food.title=Energy and Food
journal.document.alchemy_guide.energy_food.body=Some recipes require energy from the alchemy pot itself. Energy is used in recipes that produce more than the sum of their ingredients.\n\nNot all energy recipes are especially mystical however. These recipes more resemble traditional cooking than alchemy.
journal.document.alchemy_guide.bombs.title=Enhanced Bombs
journal.document.alchemy_guide.bombs.body=A standard black powder bomb can be mixed with a specific item to create an enhanced bomb.
journal.document.alchemy_guide.exotic_potions.title=Exotic Potions
journal.document.alchemy_guide.exotic_potions.body=Potions can be augmented with two seeds to create exotic potions. They have more powerful effects, but are often useful in different ways.
journal.document.alchemy_guide.exotic_scrolls.title=Exotic Scrolls
journal.document.alchemy_guide.exotic_scrolls.body=Exotic scrolls can be made with two runestones and a scroll. They're a bit stronger than exotic potions, but stones are also harder to come by.
journal.document.alchemy_guide.catalysts.title=Catalysts
journal.document.alchemy_guide.catalysts.body=Catalysts are made by combining a scroll or potion with a single seed or runestone. If the pair of items match, the alchemical energy cost is reduced.\n\nCatalysts are most useful as components in recipes covered in the next two pages, but also can be used in a pinch for a random effect.
journal.document.alchemy_guide.brews_elixirs.title=Brews and Elixirs
journal.document.alchemy_guide.brews_elixirs.body=Brews and elixirs are advanced potions which provide a variety of effects with a single use.
journal.document.alchemy_guide.spells.title=Spells
journal.document.alchemy_guide.spells.body=Spells are contained in crystals and provide a variety of effects with multiple uses.

journal.notes$landmark.well_of_health=well of health
journal.notes$landmark.well_of_awareness=well of awareness
journal.notes$landmark.well_of_transmutation=well of transmutation
journal.notes$landmark.alchemy=alchemy pot
journal.notes$landmark.garden=garden
journal.notes$landmark.statue=animated statue
journal.notes$landmark.ghost=sad ghost
journal.notes$landmark.wandmaker=old wandmaker
journal.notes$landmark.troll=troll blacksmith
journal.notes$landmark.imp=ambitious imp